/*============================================================================
  Colors
==============================================================================*/

/*================ Palette ================*/
$default-color-palette-data: (
  white: #fff,
  black: #000,
  charcoal: #50514f,
  gray: #efefef,
  blue: #247ba0,
  green: #70c1b3,
  yellow: #ffe066,
  red: #f25f5c,
  ink: hsl(0, 0%, 10%),
  primary: blue,
  danger: red,
  background: white,
  header: charcoal,
  nav-link: white
);

$custom-color-palette-data: () !default;

/*============================================================================
  Returns the color value for a given color name and group.

  @param {String} $hue - The color's hue.
  @param {String} $value - The darkness/lightness of the color. Defaults to base.
  @param {Color} $for-background - The background color on which this color will
    appear. Applies a multiply filter to ensure appropriate contrast.
  @return {Color} The color value.
==============================================================================*/
@function color($hue, $for-background: null) {
  // Merge custom color palette
  $color-palette-data: map-merge($default-color-palette-data, $custom-color-palette-data);

  // Fetch color from map
  $fetched-color: map-get($color-palette-data, $hue);

  // If fetched value matches another key
  @if map-has-key($color-palette-data, $fetched-color) {
    // Get color with fetched key
    $fetched-color: map-get($color-palette-data, $fetched-color);
  }

  @if $for-background != null {
    $fetched-color: color-multiply($fetched-color, $for-background);
  }

  @if type-of($fetched-color) == color {
    @return $fetched-color;
  } @else {
    @error "Color `#{$hue}` not found. Available colors: #{available-names($color-palette-data)}";
  }
}

/*============================================================================
  Darkens the foreground color by the background color. This is the same as the
  “multiply” filter in graphics apps.

  @param {Color} $foreground - The color to darken.
  @param {Color} $background - The background to base darkening on.
  @return {Color} The modified color.
==============================================================================*/
@function color-multiply($foreground, $background: null) {
  @if $background == null {
    $background: #fff;
  }

  @return $foreground * $background / 255;
}
